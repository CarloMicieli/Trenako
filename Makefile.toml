# Disabling workspace support 
[config]
default_to_workspace = false

[tasks.clean]
description = "clean: remove the target directory"
category = "Build"
command = "cargo"
args = ["clean"]

[tasks.check]
description = "build: analyze the workspace and report errors, but don't build object files"
category = "Build"
command = "cargo"
args = ["check"]

[tasks.build]
description = "build: compile the workspace"
category = "Build"
command = "cargo"
args = ["build"]

[tasks.test]
description = "test: run the tests"
category = "Check"
env = { "SQLX_OFFLINE" = "true" }
command = "cargo"
args = ["test", "--no-fail-fast"]

[tasks.format]
description = "format: check the sources formatting"
category = "Check"
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--all", "--check"]

[tasks.clippy]
description = "clippy: run the rust linter"
category = "Check"
install_crate = { crate_name = "clippy", rustup_component_name = "clippy", binary = "cargo-clippy", test_arg = "--help" }
args = ["clippy", "--all-targets", "--all-features", "--", "-D", "warnings"]

[tasks.code-coverage]
description = "tarpaulin: compute the code coverage"
category = "Check"
install_crate = "cargo-tarpaulin"
command = "cargo"
args = ["tarpaulin", "--ignore-tests", "--out", "Xml", "--", "--test-threads", "1"]

[tasks.all-checks] 
description = "check: run all the checks (format, clippy and tests)"
category = "Check"
dependencies = [
    "clean",
    "format",
    "clippy",
    "test"
]

[tasks.run]
description = "run: starts the backend server"
category = "Run"
command = "cargo"
args = ["run", "--bin", "trenako-server"]

# DATABASE TASKS

[tasks.db-prepare]
description = "database: prepare the queries for the offline mode"
category = "Database"
install_crate = "sqlx-cli"
install_crate_args = ["--no-default-features", "--features", "native-tls,postgres"]
command = "sqlx"
args = ["prepare", "--merged"]

[tasks.db-migrate]
description = "database: run the database migrations"
category = "Database"
install_crate = "sqlx-cli"
install_crate_args = ["--no-default-features", "--features", "native-tls,postgres"]
command = "sqlx"
args = ["migrate", "run"]

[tasks.db-update-offline]
description = "database: update the file for the query offline mode"
category = "Database"
dependencies = [
    "docker-postgres-run",
    "db-migrate",
    "db-prepare",
    "docker-postgres-stop"
]

[tasks.docker-postgres-run] 
command = "docker"
args = ["run", "-it", "--rm", 
    "-d",
    "--name", "trenako-development-db",
    "-e", "POSTGRES_PASSWORD=mysecretpassword",
    "-e", "POSTGRES_DB=trenakodb",
    "-p", "5432:5432",
    "postgres:15.1-alpine"
]

[tasks.docker-postgres-stop] 
command = "docker"
args = ["container", "stop", "trenako-development-db"]
