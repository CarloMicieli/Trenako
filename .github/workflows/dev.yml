name: dev

on:
  push:
    branches: 
      - dev
    paths:
      - '.github/workflows/dev.yml'
      - 'Cargo.lock'
      - 'Cargo.toml'
      - 'crates/**'
      - 'rust-toolchain.toml'
      - 'rustfmt.toml'
      - 'sqlx-data.json'
      - 'migrations/**'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  checks:

    runs-on: ubuntu-22.04

    steps:
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Install rust toolchain
        run: |
          rm -f "${HOME}/.cargo/bin/"{rustfmt,cargo-fmt,cargo-tarpaulin}
          rustup set profile minimal
          rustup toolchain install stable -c "clippy,rustfmt"
          cargo install cargo-tarpaulin
          rustup default stable

      - name: Toolchain info
        run: |
          rustc --version
          cargo --version --verbose
          cargo clippy --version
          cargo fmt --version
          cargo tarpaulin --version

      - name: Run cargo check
        run: cargo check

      - name: Check formatting with rustfmt
        run: cargo fmt --all --check

      - name: Linting with Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --no-fail-fast

      - name: Run cargo-tarpaulin
        run: cargo tarpaulin --ignore-tests --out Xml -- --test-threads 1

      - name: Upload coverage to Codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml
